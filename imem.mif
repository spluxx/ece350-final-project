-- null
DEPTH = 4096;
WIDTH = 32;

ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;

CONTENT
BEGIN
    -- addi $26, $0, 0
0000 : 00101110100000000000000000000000;
    -- LOOP: nop
0001 : 00000000000000000000000000000000;
    -- bne $25, $0, REGISTER_NEW_SCORE
0002 : 00010110010000000000000000000001;
    -- j LOOP
0003 : 00001000000000000000000000000001;
    -- REGISTER_NEW_SCORE: nop
0004 : 00000000000000000000000000000000;
    -- add $27, $0, $25
0005 : 00000110110000011001000000000000;
    -- addi $0, $0, 0
0006 : 00101000000000000000000000000000;
    -- addi $0, $0, 0
0007 : 00101000000000000000000000000000;
    -- addi $0, $0, 0
0008 : 00101000000000000000000000000000;
    -- addi $0, $0, 0
0009 : 00101000000000000000000000000000;
    -- addi $0, $0, 0
0010 : 00101000000000000000000000000000;
    -- addi $26, $0, 1 		# ACK the game module
0011 : 00101110100000000000000000000001;
    -- addi $19, $0, 0 		# i in reg 19
0012 : 00101100110000000000000000000000;
    -- blt $20, $27, PUSH_FIVE
0013 : 00110101001101100000000000000110;
    -- blt $21, $27, PUSH_FOUR
0014 : 00110101011101100000000000001101;
    -- blt $22, $27, PUSH_THREE
0015 : 00110101101101100000000000010011;
    -- blt $23, $27, PUSH_TWO
0016 : 00110101111101100000000000011000;
    -- blt $24, $27, PUSH_ONE
0017 : 00110110001101100000000000011100;
    -- addi $26, $0, 0
0018 : 00101110100000000000000000000000;
    -- j LOOP
0019 : 00001000000000000000000000000001;
    -- PUSH_FIVE: nop
0020 : 00000000000000000000000000000000;
    -- addi $24, $23, 0
0021 : 00101110001011100000000000000000;
    -- addi $23, $22, 0
0022 : 00101101111011000000000000000000;
    -- addi $22, $21, 0
0023 : 00101101101010100000000000000000;
    -- addi $21, $20, 0
0024 : 00101101011010000000000000000000;
    -- addi $20, $27, 0
0025 : 00101101001101100000000000000000;
    -- addi $26, $0, 0    # Should be ACKed by now
0026 : 00101110100000000000000000000000;
    -- j LOOP
0027 : 00001000000000000000000000000001;
    -- PUSH_FOUR: nop
0028 : 00000000000000000000000000000000;
    -- addi $24, $23, 0
0029 : 00101110001011100000000000000000;
    -- addi $23, $22, 0
0030 : 00101101111011000000000000000000;
    -- addi $22, $21, 0
0031 : 00101101101010100000000000000000;
    -- addi $21, $27, 0
0032 : 00101101011101100000000000000000;
    -- addi $26, $0, 0 # Should be ACKed by now
0033 : 00101110100000000000000000000000;
    -- j LOOP
0034 : 00001000000000000000000000000001;
    -- PUSH_THREE: nop
0035 : 00000000000000000000000000000000;
    -- addi $24, $23, 0
0036 : 00101110001011100000000000000000;
    -- addi $23, $22, 0
0037 : 00101101111011000000000000000000;
    -- addi $22, $27, 0
0038 : 00101101101101100000000000000000;
    -- addi $26, $0, 0 # Should be ACKed by now
0039 : 00101110100000000000000000000000;
    -- j LOOP
0040 : 00001000000000000000000000000001;
    -- PUSH_TWO: nop
0041 : 00000000000000000000000000000000;
    -- addi $24, $23, 0
0042 : 00101110001011100000000000000000;
    -- addi $23, $22, 0
0043 : 00101101111011000000000000000000;
    -- addi $26, $0, 0 # Should be ACKed by now
0044 : 00101110100000000000000000000000;
    -- j LOOP
0045 : 00001000000000000000000000000001;
    -- PUSH_ONE: nop
0046 : 00000000000000000000000000000000;
    -- addi $24, $27, 0
0047 : 00101110001101100000000000000000;
    -- addi $26, $0, 0 # Should be ACKed by now
0048 : 00101110100000000000000000000000;
    -- j LOOP
0049 : 00001000000000000000000000000001;
[0050 .. 4095] : 00000000000000000000000000000000;
END;
